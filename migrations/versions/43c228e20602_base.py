"""base

Revision ID: 43c228e20602
Revises: 
Create Date: 2019-03-05 13:28:53.787162

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '43c228e20602'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('path', sa.String(length=32), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('size', sa.String(length=32), nullable=True),
    sa.Column('md5sum', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_md5sum'), ['md5sum'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_path'), ['path'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_size'), ['size'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_type'), ['type'], unique=False)

    op.create_table('mode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('mode', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_mode_name'), ['name'], unique=True)

    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('position', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_position_name'), ['name'], unique=False)

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_role', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_user_role'), ['user_role'], unique=True)

    op.create_table('state',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('name_rus', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('state', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_state_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_state_name_rus'), ['name_rus'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('code', sa.String(length=32), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=140), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('mode_id', sa.Integer(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mode_id'], ['mode.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['state.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_timestamp'), ['timestamp'], unique=False)

    op.create_table('files_in_task2',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], )
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('files_in_task2')
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_timestamp'))

    op.drop_table('task')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('state', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_state_name_rus'))
        batch_op.drop_index(batch_op.f('ix_state_name'))

    op.drop_table('state')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_user_role'))

    op.drop_table('role')
    with op.batch_alter_table('position', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_position_name'))

    op.drop_table('position')
    with op.batch_alter_table('mode', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mode_name'))

    op.drop_table('mode')
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_type'))
        batch_op.drop_index(batch_op.f('ix_file_size'))
        batch_op.drop_index(batch_op.f('ix_file_path'))
        batch_op.drop_index(batch_op.f('ix_file_name'))
        batch_op.drop_index(batch_op.f('ix_file_md5sum'))

    op.drop_table('file')
    ### end Alembic commands ###
